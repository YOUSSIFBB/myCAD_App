{"ast":null,"code":"var _jsxFileName = \"/root/fitness-tracker/fitness-tracker-frontend/src/components/Goals.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getGoals, deleteGoal, updateGoalStatus } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goals = () => {\n  _s();\n  const [goals, setGoals] = useState([]);\n  const navigate = useNavigate();\n\n  // Fetch goals on component mount\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (!token) {\n      navigate('/login'); // Redirect to login if no token exists\n    } else {\n      fetchGoals();\n    }\n  }, [navigate]);\n\n  // Fetch goals from the API\n  const fetchGoals = async () => {\n    try {\n      const response = await getGoals();\n      setGoals(response.data); // Assuming the API returns an array of goals\n    } catch (error) {\n      console.error('Error fetching goals:', error);\n      alert('Failed to fetch goals. Please log in again.');\n      localStorage.removeItem('token');\n      navigate('/login'); // Redirect to login on error\n    }\n  };\n\n  // Handle deleting a goal\n  const handleDelete = async id => {\n    try {\n      await deleteGoal(id);\n      setGoals(goals.filter(goal => goal.id !== id)); // Update state after deletion\n    } catch (error) {\n      console.error('Error deleting goal:', error);\n      alert('Failed to delete the goal.');\n    }\n  };\n\n  // Handle updating goal status\n  const handleUpdateStatus = async (id, newStatus) => {\n    try {\n      await updateGoalStatus(id, newStatus);\n      const updatedGoals = goals.map(goal => goal.id === id ? {\n        ...goal,\n        status: newStatus\n      } : goal);\n      setGoals(updatedGoals); // Update the state with new status\n    } catch (error) {\n      console.error('Error updating status:', error);\n      alert('Failed to update goal status.');\n    }\n  };\n\n  // Group goals by status\n  const groupGoalsByStatus = status => {\n    return goals.filter(goal => goal.status === status);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center mb-4\",\n      children: \"My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"New Goal\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: groupGoalsByStatus('New Goal').map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 p-3 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), \" \", goal.target_calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), \" \", goal.start_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 29\n          }, this), \" \", goal.end_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success me-2\",\n            onClick: () => handleUpdateStatus(goal.id, 'In Progress'),\n            children: \"Mark as In Progress\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDelete(goal.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"In Progress\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: groupGoalsByStatus('In Progress').map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 p-3 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this), \" \", goal.target_calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), \" \", goal.start_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this), \" \", goal.end_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success me-2\",\n            onClick: () => handleUpdateStatus(goal.id, 'Complete'),\n            children: \"Mark as Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDelete(goal.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Complete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: groupGoalsByStatus('Complete').map(goal => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card mb-3 p-3 shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Calories:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 29\n          }, this), \" \", goal.target_calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Start:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), \" \", goal.start_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"End:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 29\n          }, this), \" \", goal.end_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-danger\",\n            onClick: () => handleDelete(goal.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Goals, \"52K+6PKaptNsDCsMJGWcZsdWZaI=\", false, function () {\n  return [useNavigate];\n});\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","getGoals","deleteGoal","updateGoalStatus","jsxDEV","_jsxDEV","Goals","_s","goals","setGoals","navigate","token","localStorage","getItem","fetchGoals","response","data","error","console","alert","removeItem","handleDelete","id","filter","goal","handleUpdateStatus","newStatus","updatedGoals","map","status","groupGoalsByStatus","className","children","fileName","_jsxFileName","lineNumber","columnNumber","target_calories","start_date","end_date","onClick","_c","$RefreshReg$"],"sources":["/root/fitness-tracker/fitness-tracker-frontend/src/components/Goals.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { getGoals, deleteGoal, updateGoalStatus } from '../services/api';\n\nconst Goals = () => {\n    const [goals, setGoals] = useState([]);\n    const navigate = useNavigate();\n\n    // Fetch goals on component mount\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        if (!token) {\n            navigate('/login'); // Redirect to login if no token exists\n        } else {\n            fetchGoals();\n        }\n    }, [navigate]);\n\n    // Fetch goals from the API\n    const fetchGoals = async () => {\n        try {\n            const response = await getGoals();\n            setGoals(response.data); // Assuming the API returns an array of goals\n        } catch (error) {\n            console.error('Error fetching goals:', error);\n            alert('Failed to fetch goals. Please log in again.');\n            localStorage.removeItem('token');\n            navigate('/login'); // Redirect to login on error\n        }\n    };\n\n    // Handle deleting a goal\n    const handleDelete = async (id) => {\n        try {\n            await deleteGoal(id);\n            setGoals(goals.filter((goal) => goal.id !== id)); // Update state after deletion\n        } catch (error) {\n            console.error('Error deleting goal:', error);\n            alert('Failed to delete the goal.');\n        }\n    };\n\n    // Handle updating goal status\n    const handleUpdateStatus = async (id, newStatus) => {\n        try {\n            await updateGoalStatus(id, newStatus);\n            const updatedGoals = goals.map((goal) =>\n                goal.id === id ? { ...goal, status: newStatus } : goal\n            );\n            setGoals(updatedGoals); // Update the state with new status\n        } catch (error) {\n            console.error('Error updating status:', error);\n            alert('Failed to update goal status.');\n        }\n    };\n\n    // Group goals by status\n    const groupGoalsByStatus = (status) => {\n        return goals.filter((goal) => goal.status === status);\n    };\n\n    return (\n        <div className=\"container mt-5\">\n            <h1 className=\"text-center mb-4\">My Goals</h1>\n\n            {/* New Goals */}\n            <h3>New Goal</h3>\n            <div>\n                {groupGoalsByStatus('New Goal').map((goal) => (\n                    <div key={goal.id} className=\"card mb-3 p-3 shadow-sm\">\n                        <p>\n                            <strong>Calories:</strong> {goal.target_calories}\n                        </p>\n                        <p>\n                            <strong>Start:</strong> {goal.start_date}\n                        </p>\n                        <p>\n                            <strong>End:</strong> {goal.end_date}\n                        </p>\n                        <div>\n                            <button\n                                className=\"btn btn-success me-2\"\n                                onClick={() => handleUpdateStatus(goal.id, 'In Progress')}\n                            >\n                                Mark as In Progress\n                            </button>\n                            <button\n                                className=\"btn btn-danger\"\n                                onClick={() => handleDelete(goal.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* In Progress Goals */}\n            <h3>In Progress</h3>\n            <div>\n                {groupGoalsByStatus('In Progress').map((goal) => (\n                    <div key={goal.id} className=\"card mb-3 p-3 shadow-sm\">\n                        <p>\n                            <strong>Calories:</strong> {goal.target_calories}\n                        </p>\n                        <p>\n                            <strong>Start:</strong> {goal.start_date}\n                        </p>\n                        <p>\n                            <strong>End:</strong> {goal.end_date}\n                        </p>\n                        <div>\n                            <button\n                                className=\"btn btn-success me-2\"\n                                onClick={() => handleUpdateStatus(goal.id, 'Complete')}\n                            >\n                                Mark as Complete\n                            </button>\n                            <button\n                                className=\"btn btn-danger\"\n                                onClick={() => handleDelete(goal.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n\n            {/* Completed Goals */}\n            <h3>Complete</h3>\n            <div>\n                {groupGoalsByStatus('Complete').map((goal) => (\n                    <div key={goal.id} className=\"card mb-3 p-3 shadow-sm\">\n                        <p>\n                            <strong>Calories:</strong> {goal.target_calories}\n                        </p>\n                        <p>\n                            <strong>Start:</strong> {goal.start_date}\n                        </p>\n                        <p>\n                            <strong>End:</strong> {goal.end_date}\n                        </p>\n                        <div>\n                            <button\n                                className=\"btn btn-danger\"\n                                onClick={() => handleDelete(goal.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                    </div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Goals;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}