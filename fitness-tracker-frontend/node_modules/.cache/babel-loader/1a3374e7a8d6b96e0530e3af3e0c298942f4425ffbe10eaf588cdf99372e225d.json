{"ast":null,"code":"var _jsxFileName = \"/root/fitness-tracker/fitness-tracker-frontend/src/components/StatsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport { Chart as ChartJS, CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend } from 'chart.js';\n\n// Register Chart.js components\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\nfunction StatsPage() {\n  _s();\n  const [chartData, setChartData] = useState({\n    labels: [],\n    datasets: []\n  });\n  useEffect(() => {\n    // Fetch goals data from your API\n    const fetchGoals = async () => {\n      try {\n        const response = await axios.get('http://127.0.0.1:3000/goals');\n        const goals = response.data;\n\n        // Filter completed goals\n        const completedGoals = goals.filter(goal => goal.status === 'Complete');\n\n        // Group calories burned by month\n        const caloriesByMonth = completedGoals.reduce((acc, goal) => {\n          const month = new Date(goal.end_date).toLocaleString('default', {\n            month: 'long'\n          });\n          acc[month] = (acc[month] || 0) + goal.calories;\n          return acc;\n        }, {});\n\n        // Prepare chart data\n        const labels = Object.keys(caloriesByMonth);\n        const data = Object.values(caloriesByMonth);\n        setChartData({\n          labels,\n          datasets: [{\n            label: 'Calories Burned per Month',\n            data: data,\n            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n            borderColor: 'rgb(75, 192, 192)',\n            borderWidth: 1\n          }]\n        });\n      } catch (error) {\n        console.error('Error fetching goals:', error);\n      }\n    };\n    fetchGoals();\n  }, []);\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: 'top'\n      },\n      title: {\n        display: true,\n        text: 'Total Calories Burned per Month'\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '80%',\n      margin: '50px auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Statistics Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n}\n_s(StatsPage, \"7aHF4pQjK29ZnmUXDBh13o5oHNw=\");\n_c = StatsPage;\nexport default StatsPage;\nvar _c;\n$RefreshReg$(_c, \"StatsPage\");","map":{"version":3,"names":["React","useEffect","useState","Bar","axios","Chart","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","StatsPage","_s","chartData","setChartData","labels","datasets","fetchGoals","response","get","goals","data","completedGoals","filter","goal","status","caloriesByMonth","reduce","acc","month","Date","end_date","toLocaleString","calories","Object","keys","values","label","backgroundColor","borderColor","borderWidth","error","console","options","responsive","plugins","legend","position","title","display","text","style","width","margin","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/root/fitness-tracker/fitness-tracker-frontend/src/components/StatsPage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2';\nimport axios from 'axios';\nimport {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n} from 'chart.js';\n\n// Register Chart.js components\nChartJS.register(CategoryScale, LinearScale, BarElement, Title, Tooltip, Legend);\n\nfunction StatsPage() {\n    const [chartData, setChartData] = useState({\n        labels: [],\n        datasets: [],\n    });\n\n    useEffect(() => {\n        // Fetch goals data from your API\n        const fetchGoals = async () => {\n            try {\n                const response = await axios.get('http://127.0.0.1:3000/goals');\n                const goals = response.data;\n\n                // Filter completed goals\n                const completedGoals = goals.filter(goal => goal.status === 'Complete');\n\n                // Group calories burned by month\n                const caloriesByMonth = completedGoals.reduce((acc, goal) => {\n                    const month = new Date(goal.end_date).toLocaleString('default', { month: 'long' });\n                    acc[month] = (acc[month] || 0) + goal.calories;\n                    return acc;\n                }, {});\n\n                // Prepare chart data\n                const labels = Object.keys(caloriesByMonth);\n                const data = Object.values(caloriesByMonth);\n\n                setChartData({\n                    labels,\n                    datasets: [\n                        {\n                            label: 'Calories Burned per Month',\n                            data: data,\n                            backgroundColor: 'rgba(75, 192, 192, 0.6)',\n                            borderColor: 'rgb(75, 192, 192)',\n                            borderWidth: 1,\n                        },\n                    ],\n                });\n            } catch (error) {\n                console.error('Error fetching goals:', error);\n            }\n        };\n\n        fetchGoals();\n    }, []);\n\n    const options = {\n        responsive: true,\n        plugins: {\n            legend: { position: 'top' },\n            title: {\n                display: true,\n                text: 'Total Calories Burned per Month',\n            },\n        },\n    };\n\n    return (\n        <div style={{ width: '80%', margin: '50px auto' }}>\n            <h2>Statistics Page</h2>\n            <Bar data={chartData} options={options} />\n        </div>\n    );\n}\n\nexport default StatsPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}