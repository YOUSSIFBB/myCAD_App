{"ast":null,"code":"var _jsxFileName = \"/root/fitness-tracker/fitness-tracker-frontend/src/components/Goals.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Goals = () => {\n  _s();\n  const [goals, setGoals] = useState([]);\n\n  // Fetch Goals from API\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:3000/goals\").then(response => response.json()).then(data => setGoals(data)).catch(error => console.error(\"Error fetching goals:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Goals\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), goals.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No goals available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: goals.map(goal => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: goal.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }, this), \" - \", goal.status, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Calories: \", goal.calories]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start: \", goal.start_date, \" | End: \", goal.end_date]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this)]\n      }, goal.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this);\n};\n_s(Goals, \"unVZk6oTfEFOQZ6NvI8KtfburI8=\");\n_c = Goals;\nexport default Goals;\nvar _c;\n$RefreshReg$(_c, \"Goals\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Goals","_s","goals","setGoals","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","goal","title","status","calories","start_date","end_date","id","_c","$RefreshReg$"],"sources":["/root/fitness-tracker/fitness-tracker-frontend/src/components/Goals.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst Goals = () => {\n    const [goals, setGoals] = useState([]);\n\n    // Fetch Goals from API\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:3000/goals\")\n            .then(response => response.json())\n            .then(data => setGoals(data))\n            .catch(error => console.error(\"Error fetching goals:\", error));\n    }, []);\n\n    return (\n        <div>\n            <h1>My Goals</h1>\n            {goals.length === 0 ? (\n                <p>No goals available.</p>\n            ) : (\n                <ul>\n                    {goals.map(goal => (\n                        <li key={goal.id}>\n                            <strong>{goal.title}</strong> - {goal.status}\n                            <p>Calories: {goal.calories}</p>\n                            <p>\n                                Start: {goal.start_date} | End: {goal.end_date}\n                            </p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\nexport default Goals;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACAC,SAAS,CAAC,MAAM;IACZO,KAAK,CAAC,6BAA6B,CAAC,CAC/BC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,QAAQ,CAACK,IAAI,CAAC,CAAC,CAC5BC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC,CAAC;EACtE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIX,OAAA;IAAAa,QAAA,gBACIb,OAAA;MAAAa,QAAA,EAAI;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChBd,KAAK,CAACe,MAAM,KAAK,CAAC,gBACflB,OAAA;MAAAa,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE1BjB,OAAA;MAAAa,QAAA,EACKV,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACXpB,OAAA;QAAAa,QAAA,gBACIb,OAAA;UAAAa,QAAA,EAASO,IAAI,CAACC;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACG,IAAI,CAACE,MAAM,eAC5CtB,OAAA;UAAAa,QAAA,GAAG,YAAU,EAACO,IAAI,CAACG,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChCjB,OAAA;UAAAa,QAAA,GAAG,SACQ,EAACO,IAAI,CAACI,UAAU,EAAC,UAAQ,EAACJ,IAAI,CAACK,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC;MAAA,GALCG,IAAI,CAACM,EAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CACP;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACf,EAAA,CA/BID,KAAK;AAAA0B,EAAA,GAAL1B,KAAK;AAiCX,eAAeA,KAAK;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}